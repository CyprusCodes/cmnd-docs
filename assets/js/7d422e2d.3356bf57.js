"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6449],{7613:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=t(4848),o=t(8453);const i={id:"custom-tool-js",title:"Build a Custom Tool \u2013 JavaScript",description:"How to build a CMND Custom Tool using JavaScript",sidebar_position:1},r="Build a Custom Tool \u2013 JavaScript",l={id:"cmnd-custom-tools/cmnd-extensions-api/custom-tool-js",title:"Build a Custom Tool \u2013 JavaScript",description:"How to build a CMND Custom Tool using JavaScript",source:"@site/docs/cmnd-custom-tools/cmnd-extensions-api/cmnd-extension-js.md",sourceDirName:"cmnd-custom-tools/cmnd-extensions-api",slug:"/cmnd-custom-tools/cmnd-extensions-api/custom-tool-js",permalink:"/docs/cmnd-custom-tools/cmnd-extensions-api/custom-tool-js",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"custom-tool-js",title:"Build a Custom Tool \u2013 JavaScript",description:"How to build a CMND Custom Tool using JavaScript",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"CMND Extensions API",permalink:"/docs/category/cmnd-extensions-api"},next:{title:"Build a Custom Tool \u2013 Python",permalink:"/docs/cmnd-custom-tools/cmnd-extensions-api/custom-tool-python"}},a={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Define Your Tool",id:"define-your-tool",level:2},{value:"Make It Public with Ngrok",id:"make-it-public-with-ngrok",level:2},{value:"API Keys",id:"api-keys",level:2},{value:"What\u2019s Next?",id:"whats-next",level:2}];function d(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"build-a-custom-tool--javascript",children:"Build a Custom Tool \u2013 JavaScript"})}),"\n",(0,s.jsx)(n.p,{children:"Custom Tools allow you to connect your own backend logic to CMND.ai and make it callable inside assistant conversations."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This guide walks through how to create and expose your own tool using JavaScript via a Node.js server, and make it available to CMND through a public endpoint."})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Node.js and npm installed"}),"\n",(0,s.jsx)(n.li,{children:"A CMND.ai account and chatbot"}),"\n",(0,s.jsx)(n.li,{children:"Ngrok or any alternative tunneling tool"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Clone the sample extensions repo:"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone https://github.com/CyprusCodes/cmnd-extension-sample-nodejs.git\ncd cmnd-extension-sample-nodejs\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Install dependencies:"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'title="Terminal"',children:"npm install\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Set up your environment:"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:".env"})," file at the root of the project and add any necessary values, such as:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"PORT=8000\nAPI_KEY=your_api_key_here\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Start the server:"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:'title="Terminal"',children:"npm start\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once running, your tool server will be available locally. You\u2019ll need to make it publicly accessible to use it in CMND."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"define-your-tool",children:"Define Your Tool"}),"\n",(0,s.jsxs)(n.p,{children:["All tools are defined in the ",(0,s.jsx)(n.code,{children:"tools.js"})," file. Here\u2019s how to create one:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"yup"})," to define the input schema"]}),"\n",(0,s.jsx)(n.li,{children:"Implement the tool's logic in an async function"}),"\n",(0,s.jsx)(n.li,{children:"Register the tool using a configuration object"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="tools.js" showLineNumbers',children:'const axios = require("axios");\nconst yup = require("yup");\nconst yupToJsonSchema = require("./yupToJsonSchema");\n\nconst WeatherSchema = yup.object({\n  city: yup.string().required(),\n});\n\nconst WeatherTool = {\n  name: "weather_from_location",\n  description: "Fetches current weather for a given city",\n  category: "weather",\n  subcategory: "forecast",\n  functionType: "backend",\n  dangerous: false,\n  associatedCommands: [],\n  prerequisites: [],\n  parameters: yupToJsonSchema(WeatherSchema),\n  rerun: true,\n  rerunWithDifferentParameters: true,\n  runCmd: async ({ city }) => {\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.WEATHER_API_KEY}`\n      );\n      return JSON.stringify(response.data);\n    } catch (err) {\n      return "Error trying to execute the tool";\n    }\n  },\n};\n\nconst tools = [WeatherTool];\nmodule.exports = tools;\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"After adding a new tool, restart the server to apply changes."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"make-it-public-with-ngrok",children:"Make It Public with Ngrok"}),"\n",(0,s.jsx)(n.p,{children:"To allow CMND to call your local server, expose it using Ngrok:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ngrok http 8000\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Ensure the port in your ",(0,s.jsx)(n.code,{children:".env"})," matches the port you\u2019re exposing."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The public HTTPS URL returned by Ngrok is what you\u2019ll register in CMND when adding the tool."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"api-keys",children:"API Keys"}),"\n",(0,s.jsxs)(n.p,{children:["If your tool uses third-party APIs, store sensitive keys in your ",(0,s.jsx)(n.code,{children:".env"})," file and load them using ",(0,s.jsx)(n.code,{children:"process.env.KEY_NAME"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"whats-next",children:"What\u2019s Next?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add your public tool URL in the CMND dashboard"}),"\n",(0,s.jsx)(n.li,{children:"Use the tool in assistant conversations"}),"\n",(0,s.jsx)(n.li,{children:"Chain or combine it with other tools as needed"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);