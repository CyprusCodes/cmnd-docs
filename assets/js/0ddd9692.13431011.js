"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1811],{6542:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var a=t(4848),i=t(8453),s=t(1470),o=t(9365);const r={id:"chat-components",title:"Chat Components",description:"Customize UI components in the CMND React SDK to match your application's theme and design system.",sidebar_position:1},l="Chat Components",c={id:"cmnd-react-sdk/configuration-options/chat-components",title:"Chat Components",description:"Customize UI components in the CMND React SDK to match your application's theme and design system.",source:"@site/docs/cmnd-react-sdk/configuration-options/chat_components.md",sourceDirName:"cmnd-react-sdk/configuration-options",slug:"/cmnd-react-sdk/configuration-options/chat-components",permalink:"/docs/cmnd-react-sdk/configuration-options/chat-components",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"chat-components",title:"Chat Components",description:"Customize UI components in the CMND React SDK to match your application's theme and design system.",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Configuration Options",permalink:"/docs/category/configuration-options"},next:{title:"Custom Styles",permalink:"/docs/cmnd-react-sdk/configuration-options/custom-styles"}},d={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Available Components",id:"available-components",level:2},{value:"InputField Component",id:"inputfield-component",level:2},{value:"Usage Example",id:"usage-example",level:3},{value:"SendButton Component",id:"sendbutton-component",level:2},{value:"Usage Example",id:"usage-example-1",level:3},{value:"Implementation",id:"implementation",level:2},{value:"Component States",id:"component-states",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Implementation Examples",id:"implementation-examples",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"chat-components",children:"Chat Components"})}),"\n",(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsx)(n.p,{children:"The CMND React SDK provides customizable UI components that allow you to tailor your conversation view's appearance to match your application's theme. This feature is particularly valuable when integrating with existing UI libraries or maintaining consistent design systems."}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"This guide contains information on how to customize input fields, send buttons, and other UI elements of the CMND chatbot in order to create a seamless integration with your application."})}),"\n",(0,a.jsx)(n.h2,{id:"available-components",children:"Available Components"}),"\n","\n",(0,a.jsx)(n.p,{children:"The SDK supports customization of the following components:"}),"\n",(0,a.jsxs)(s.A,{groupId:"components",children:[(0,a.jsxs)(o.A,{value:"inputfield",label:"InputField",default:!0,children:[(0,a.jsx)(n.h2,{id:"inputfield-component",children:"InputField Component"}),(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"InputField"})," component allows you to customize the appearance and behavior of the message input area."]}),(0,a.jsxs)("div",{className:"card",children:[(0,a.jsx)("div",{className:"card__header",children:(0,a.jsx)("h3",{children:"Type Definition"})}),(0,a.jsx)("div",{className:"card__body",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="TypeScript" showLineNumbers',children:"interface InputFieldProps {\n  /** Current input value */\n  input: string;\n\n  /** Function to update input value */\n  setInput: (input: string) => void;\n\n  /** Boolean indicating if message can be sent */\n  canSendMessage: boolean;\n\n  /** Function to handle message sending */\n  handleSendClick: () => void;\n}\n"})})})]}),(0,a.jsx)(n.h3,{id:"usage-example",children:"Usage Example"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="TypeScript" showLineNumbers',children:'// Usage example\nimport { InputFieldProps } from "@cmnd-ai/chatbot-react";\n\nconst CustomInputField = ({\n  input,\n  setInput,\n  canSendMessage,\n  handleSendClick,\n}: InputFieldProps) => {\n  return (\n    <div className="custom-input-container">\n      <input\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder="Type your message..."\n      />\n    </div>\n  );\n};\n'})})]}),(0,a.jsxs)(o.A,{value:"sendbutton",label:"SendButton",children:[(0,a.jsx)(n.h2,{id:"sendbutton-component",children:"SendButton Component"}),(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"SendButton"})," component allows you to customize the appearance and behavior of the message send button."]}),(0,a.jsxs)("div",{className:"card",children:[(0,a.jsx)("div",{className:"card__header",children:(0,a.jsx)("h3",{children:"Type Definition"})}),(0,a.jsx)("div",{className:"card__body",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="TypeScript" showLineNumbers',children:"interface SendButtonProps {\n  /** Function to handle message sending */\n  handleSendClick: () => void;\n\n  /** Boolean indicating if message can be sent */\n  canSendMessage: boolean;\n}\n"})})})]}),(0,a.jsx)(n.h3,{id:"usage-example-1",children:"Usage Example"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="TypeScript" showLineNumbers',children:'// Usage example\nimport { SendButtonProps } from "@cmnd-ai/chatbot-react";\n\nconst CustomSendButton = ({\n  handleSendClick,\n  canSendMessage,\n}: SendButtonProps) => {\n  return (\n    <button\n      onClick={handleSendClick}\n      disabled={!canSendMessage}\n      className="custom-send-button"\n    >\n      Send\n    </button>\n  );\n};\n'})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,a.jsx)(n.p,{children:"To use custom components, pass them as props when initializing the chat component:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="TypeScript" showLineNumbers',children:'import { ChatProvider, CmndChatBot } from "@cmnd-ai/chatbot-react";\n\nfunction App() {\n  return (\n    <ChatProvider\n      baseUrl="<your-cmnd-api-base-url>"\n      chatbotId="<your-chatbot-id>"\n      organizationId="<your-organization-id>"\n      Components={{\n        InputField: CustomInputField,\n        SendButton: CustomSendButton,\n      }}\n    >\n      <CmndChatBot />\n    </ChatProvider>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"component-states",children:"Component States"}),"\n",(0,a.jsxs)("div",{className:"admonition admonition-info",children:[(0,a.jsx)("div",{className:"admonition-heading",children:(0,a.jsx)("h5",{children:"Component States"})}),(0,a.jsx)("div",{className:"admonition-content",children:(0,a.jsx)("p",{children:"Each component should handle the following states to provide a complete user experience:"})})]}),"\n",(0,a.jsx)("div",{className:"table-container",children:(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"State"}),(0,a.jsx)("th",{children:"Description"})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Default"}),(0,a.jsx)("td",{children:"Normal appearance of the component"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Hover"}),(0,a.jsx)("td",{children:"Visual feedback when user hovers over component"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Active/Focus"}),(0,a.jsx)("td",{children:"Visual feedback when component is active or focused"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Disabled"}),(0,a.jsx)("td",{children:"Appearance when interaction is not allowed"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Error"}),(0,a.jsx)("td",{children:"Visual feedback for error conditions"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Loading"}),(0,a.jsx)("td",{children:"Visual indicator for async operations (if applicable)"})]})]})]})}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,a.jsxs)(s.A,{groupId:"best-practices",children:[(0,a.jsx)(o.A,{value:"accessibility",label:"Accessibility",default:!0,children:(0,a.jsx)("div",{className:"card",children:(0,a.jsx)("div",{className:"card__body",children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Ensure custom components maintain ARIA attributes and keyboard navigation"}),(0,a.jsx)("li",{children:"Provide appropriate visual feedback for different states"}),(0,a.jsx)("li",{children:"Use sufficient color contrast for text and interactive elements"})]})})})}),(0,a.jsx)(o.A,{value:"error",label:"Error Handling",children:(0,a.jsx)("div",{className:"card",children:(0,a.jsx)("div",{className:"card__body",children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Implement proper error states in custom components"}),(0,a.jsx)("li",{children:"Handle edge cases like empty messages or network issues"}),(0,a.jsx)("li",{children:"Provide clear feedback to users when errors occur"})]})})})}),(0,a.jsx)(o.A,{value:"responsive",label:"Responsive Design",children:(0,a.jsx)("div",{className:"card",children:(0,a.jsx)("div",{className:"card__body",children:(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:"Make components responsive to different screen sizes"}),(0,a.jsx)("li",{children:"Consider mobile-first design principles"}),(0,a.jsx)("li",{children:"Test on various devices and viewport sizes"})]})})})})]}),"\n",(0,a.jsx)(n.admonition,{title:"TypeScript Integration",type:"info",children:(0,a.jsx)(n.p,{children:"The SDK provides full TypeScript support for all component props and interfaces. This ensures type safety and better developer experience when implementing custom components."})}),"\n",(0,a.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,a.jsx)(n.p,{children:"Below are examples of how to implement custom components using popular UI frameworks:"}),"\n",(0,a.jsxs)(s.A,{groupId:"ui-frameworks",children:[(0,a.jsx)(o.A,{value:"material",label:"Material-UI",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="TypeScript" showLineNumbers',children:'import {\n  ChatProvider,\n  CmndChatBot,\n  InputFieldProps,\n  SendButtonProps,\n} from "@cmnd-ai/chatbot-react";\nimport { TextField, Button } from "@mui/material";\n\nconst MaterialInputField = ({\n  input,\n  setInput,\n  canSendMessage,\n}: InputFieldProps) => (\n  <TextField\n    value={input}\n    onChange={(e) => setInput(e.target.value)}\n    variant="outlined"\n    fullWidth\n    disabled={!canSendMessage}\n  />\n);\n\nconst MaterialSendButton = ({\n  handleSendClick,\n  canSendMessage,\n}: SendButtonProps) => (\n  <Button\n    onClick={handleSendClick}\n    disabled={!canSendMessage}\n    variant="contained"\n    color="primary"\n  >\n    Send\n  </Button>\n);\n\nfunction App() {\n  return (\n    <ChatProvider\n      baseUrl="<your-cmnd-api-base-url>"\n      chatbotId="<your-chatbot-id>"\n      organizationId="<your-organization-id>"\n      Components={{\n        InputField: MaterialInputField,\n        SendButton: MaterialSendButton,\n      }}\n    >\n      <CmndChatBot />\n    </ChatProvider>\n  );\n}\n'})})}),(0,a.jsx)(o.A,{value:"tailwind",label:"Tailwind CSS",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:'title="TypeScript" showLineNumbers',children:'import {\n  ChatProvider,\n  CmndChatBot,\n  InputFieldProps,\n  SendButtonProps,\n} from "@cmnd-ai/chatbot-react";\n\nconst TailwindInputField = ({\n  input,\n  setInput,\n  canSendMessage,\n}: InputFieldProps) => (\n  <input\n    type="text"\n    value={input}\n    onChange={(e) => setInput(e.target.value)}\n    className="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"\n    disabled={!canSendMessage}\n  />\n);\n\nconst TailwindSendButton = ({\n  handleSendClick,\n  canSendMessage,\n}: SendButtonProps) => (\n  <button\n    onClick={handleSendClick}\n    disabled={!canSendMessage}\n    className="px-4 py-2 bg-blue-500 text-white rounded-lg disabled:bg-gray-400"\n  >\n    Send\n  </button>\n);\n\nfunction App() {\n  return (\n    <ChatProvider\n      baseUrl="<your-cmnd-api-base-url>"\n      chatbotId="<your-chatbot-id>"\n      organizationId="<your-organization-id>"\n      Components={{\n        InputField: TailwindInputField,\n        SendButton: TailwindSendButton,\n      }}\n    >\n      <CmndChatBot />\n    </ChatProvider>\n  );\n}\n'})})})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"When implementing custom components, consider creating a theme file that defines consistent styles across all your components to maintain visual coherence throughout your application."})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var a=t(4164);const i={tabItem:"tabItem_Ymn6"};var s=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,o),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>C});var a=t(6540),i=t(4164),s=t(3104),o=t(6347),r=t(205),l=t(7485),c=t(1682),d=t(679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const i=(0,o.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(i.location.search);n.set(s,e),i.replace({...i.location,search:n.toString()})}),[s,i])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,s=p(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,u]=m({queryString:t,groupId:i}),[b,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,s]=(0,d.Dv)(t);return[i,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:i}),g=(()=>{const e=c??b;return h({value:e,tabValues:s})?e:null})();(0,r.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),x(e)}),[u,x,s]),tabValues:s}}var x=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(4848);function v(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:r}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),i=r[t].value;i!==a&&(c(n),o(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:r.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...s,className:(0,i.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:s}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=b(e);return(0,f.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,f.jsx)(v,{...n,...e}),(0,f.jsx)(j,{...n,...e})]})}function C(e){const n=(0,x.A)();return(0,f.jsx)(y,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const i={},s=a.createContext(i);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);