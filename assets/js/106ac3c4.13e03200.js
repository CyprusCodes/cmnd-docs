"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[836],{1729:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=t(4848),i=t(8453);const s={id:"custom-tool-python",title:"Build a Custom Tool \u2013 Python",description:"How to build a CMND Custom Tool in Python",sidebar_position:2},r="Build a Custom Tool \u2013 Python",l={id:"cmnd-custom-tools/custom-tool-python",title:"Build a Custom Tool \u2013 Python",description:"How to build a CMND Custom Tool in Python",source:"@site/docs/cmnd-custom-tools/cmnd-extension-python.md",sourceDirName:"cmnd-custom-tools",slug:"/cmnd-custom-tools/custom-tool-python",permalink:"/docs/cmnd-custom-tools/custom-tool-python",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"custom-tool-python",title:"Build a Custom Tool \u2013 Python",description:"How to build a CMND Custom Tool in Python",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Overview & Capabilities",permalink:"/docs/cmnd-custom-tools/overview"},next:{title:"Build a Custom Tool \u2013 JavaScript",permalink:"/docs/cmnd-custom-tools/custom-tool-js"}},a={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Define Your Tool",id:"define-your-tool",level:2},{value:"Run the Tool Server",id:"run-the-tool-server",level:2},{value:"Make It Public with Ngrok",id:"make-it-public-with-ngrok",level:2},{value:"\ud83d\udd10 API Keys",id:"-api-keys",level:2},{value:"What\u2019s Next?",id:"whats-next",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"build-a-custom-tool--python",children:"Build a Custom Tool \u2013 Python"})}),"\n",(0,o.jsx)(n.p,{children:"Custom Tools allow you to connect your own backend logic to CMND.ai and make it callable inside assistant conversations."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"This guide walks through how to create and expose your own tool using Python \u2014 using either FastAPI or Flask \u2014 and make it available to CMND through a simple server endpoint."})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Python 3.8+"}),"\n",(0,o.jsx)(n.li,{children:"A CMND.ai account and chatbot"}),"\n",(0,o.jsx)(n.li,{children:"Ngrok or any other alternative (for public tunneling)"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Clone and navigate into the sample extensions repo:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="Terminal"',children:"git clone https://github.com/CyprusCodes/cmnd-extension-sample-python.git\ncd cmnd-extension-sample-python\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Install dependencies:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="Terminal"',children:"pip install -r requirements.txt\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Choose a framework:"}),(0,o.jsx)(n.br,{}),"\n","Navigate into either the ",(0,o.jsx)(n.code,{children:"fastapi"})," or ",(0,o.jsx)(n.code,{children:"flask"})," folder, depending on your preference."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"define-your-tool",children:"Define Your Tool"}),"\n",(0,o.jsxs)(n.p,{children:["All tools live in the ",(0,o.jsx)(n.code,{children:"tools.py"})," file. Here's how a tool is defined:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.strong,{children:"Pydantic"})," to declare your input schema"]}),"\n",(0,o.jsx)(n.li,{children:"Write the core logic of your tool"}),"\n",(0,o.jsx)(n.li,{children:"Register it by returning a config dictionary with metadata"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",metastring:'title="tools.py" showLineNumbers',children:'from pydantic import BaseModel, Field\nimport httpx\nimport os\n\nclass WeatherCitySchema(BaseModel):\n    city: str = Field(..., title="City", description="City name required")\n\nasync def weather_from_location(city: str):\n    api_key = os.getenv(\'WEATHER_API_KEY\')\n    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}"\n    async with httpx.AsyncClient() as client:\n        response = await client.get(url)\n        return response.json()\n\ntool = [\n    {\n        "name": "weather_from_location",\n        "description": "Gets the weather details from a given city name",\n        "parameters": WeatherCitySchema.schema(),\n        "runCmd": weather_from_location,\n        "isDangerous": False,\n        "functionType": "backend",\n        "isLongRunningTool": False,\n        "rerun": True,\n        "rerunWithDifferentParameters": True\n    }\n]\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"run-the-tool-server",children:"Run the Tool Server"}),"\n",(0,o.jsx)(n.p,{children:"Run the API locally:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"python3 main.py\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"make-it-public-with-ngrok",children:"Make It Public with Ngrok"}),"\n",(0,o.jsx)(n.p,{children:"To allow CMND to call your local server, expose it using Ngrok:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://ngrok.com/docs/getting-started",children:"Download and set up Ngrok"})}),"\n",(0,o.jsx)(n.li,{children:"Start your app as normal:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"python3 main.py\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:"In a separate terminal, run:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ngrok http 8000\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Make sure the port used in ",(0,o.jsx)(n.code,{children:"main.py"})," matches the one you're exposing via Ngrok."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Once live, you'll get a public HTTPS URL. This is the endpoint you\u2019ll register with CMND when adding the tool to a chatbot."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-api-keys",children:"\ud83d\udd10 API Keys"}),"\n",(0,o.jsxs)(n.p,{children:["If your tool uses third-party services (like weather APIs), store secrets in a ",(0,o.jsx)(n.code,{children:".env"})," file and load them via ",(0,o.jsx)(n.code,{children:"os.getenv()"}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"whats-next",children:"What\u2019s Next?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Add your public tool URL in the CMND dashboard"}),"\n",(0,o.jsx)(n.li,{children:"Use the tool in conversations or assistants"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);