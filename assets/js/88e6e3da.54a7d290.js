"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3411],{3930:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=t(4848),s=t(8453);const i=t.p+"assets/images/show_form_sample-6aebedbf8c8fba013d58b9f24dd88faa.png",o={id:"ui-tools",title:"UI Tools",descrption:"UI Tools",sidebar_position:5},d="UI Tools",a={id:"cmnd-embed-widget/configuration-options/ui-tools",title:"UI Tools",description:"Ov/erview",source:"@site/docs/cmnd-embed-widget/configuration-options/ui_tools.md",sourceDirName:"cmnd-embed-widget/configuration-options",slug:"/cmnd-embed-widget/configuration-options/ui-tools",permalink:"/docs/cmnd-embed-widget/configuration-options/ui-tools",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"ui-tools",title:"UI Tools",descrption:"UI Tools",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Styles & Configurations",permalink:"/docs/cmnd-embed-widget/configuration-options/styles-and-configurations"},next:{title:"CMND Custom Tools",permalink:"/docs/category/cmnd-custom-tools"}},c={},l=[{value:"Ov/erview",id:"overview",level:2},{value:"Built-in Tools",id:"built-in-tools",level:2},{value:"Custom UI Tools",id:"custom-ui-tools",level:2},{value:"Defining a Custom UI Tool",id:"defining-a-custom-ui-tool",level:3},{value:"Key Properties of a Custom UI Tool",id:"key-properties-of-a-custom-ui-tool",level:4},{value:"Example: Custom UI Tool Definition",id:"example-custom-ui-tool-definition",level:4},{value:"<code>runCmd</code> Function Parameters",id:"runcmd-function-parameters",level:3},{value:"Usage",id:"usage",level:3},{value:"Types of Custom UI Tools",id:"types-of-custom-ui-tools",level:2},{value:"Example: Type 1 - Rendered in chat box without capturing input",id:"example-type-1---rendered-in-chat-box-without-capturing-input",level:3},{value:"Example: Type 2 - Rendered in chat box with input capture",id:"example-type-2---rendered-in-chat-box-with-input-capture",level:3},{value:"Example: Type 3 - Not rendered in chat box without capturing input",id:"example-type-3---not-rendered-in-chat-box-without-capturing-input",level:3},{value:"Example: Type 4 - Not rendered in chat box with input capture",id:"example-type-4---not-rendered-in-chat-box-with-input-capture",level:3}];function u(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"ui-tools",children:"UI Tools"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Ov/erview"}),"\n",(0,r.jsxs)(n.p,{children:["The embed widget provides tools that can run with AI context or arguments, enabling you to display information or manipulate the DOM. The widget includes built-in tools accessible via ",(0,r.jsx)(n.code,{children:"window.cmndBuiltInTools"})," and supports custom tool creation."]}),"\n",(0,r.jsx)(n.h2,{id:"built-in-tools",children:"Built-in Tools"}),"\n",(0,r.jsx)(n.p,{children:"The following tools come pre-configured with the embed widget by default:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"show_form"})}),(0,r.jsx)(n.td,{children:"Displays a form based on a provided JSON schema"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"capture_signature"})}),(0,r.jsx)(n.td,{children:"Captures a user's signature"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"show_rating"})}),(0,r.jsx)(n.td,{children:"Displays a rating input widget"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"show_video_player"})}),(0,r.jsx)(n.td,{children:"Displays a video player"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"show_image_viewer"})}),(0,r.jsx)(n.td,{children:"Displays an image viewer"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["These tools can be triggered by providing a prompt related to their functionality. For example, asking ",(0,r.jsx)(n.em,{children:'"Show me a login form"'})," will render a login form."]}),"\n",(0,r.jsx)("a",{href:i,target:"_blank",children:(0,r.jsx)("img",{src:i,width:"400"})}),"\n",(0,r.jsx)(n.h2,{id:"custom-ui-tools",children:"Custom UI Tools"}),"\n",(0,r.jsx)(n.p,{children:"Custom UI tools allow you to extend the widget's functionality with your own tools tailored to specific use cases. These can override the default built-in tools or work alongside them."}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["Providing custom UI tools overwrites the built-in tools, but you can extend your custom UI tools with the built-in tools using ",(0,r.jsx)(n.code,{children:"window.cmndBuiltInTools"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"defining-a-custom-ui-tool",children:"Defining a Custom UI Tool"}),"\n",(0,r.jsxs)(n.p,{children:["Each custom tool must have a ",(0,r.jsx)(n.code,{children:"functionType"})," set to ",(0,r.jsx)(n.code,{children:"ui"})," and follow a consistent structure."]}),"\n",(0,r.jsx)(n.h4,{id:"key-properties-of-a-custom-ui-tool",children:"Key Properties of a Custom UI Tool"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"Unique identifier for the tool"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"change_background_color"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"description"})}),(0,r.jsx)(n.td,{children:"Short description of what the tool does"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"Changes the background color of the page"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dangerous"})}),(0,r.jsx)(n.td,{children:"Indicates if the tool performs potentially harmful actions"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"associatedCommands"})}),(0,r.jsx)(n.td,{children:"Additional commands required by the tool"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[]"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prerequisites"})}),(0,r.jsx)(n.td,{children:"Prerequisites required by the tool"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[]"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"argumentSchema"})}),(0,r.jsx)(n.td,{children:"Defines required arguments in JSON schema format"}),(0,r.jsx)(n.td,{children:"See example below"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rerun"})}),(0,r.jsx)(n.td,{children:"Whether the tool can be rerun with the same parameters"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rerunWithDifferentParameters"})}),(0,r.jsx)(n.td,{children:"Whether the tool can be rerun with different parameters"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"capturesUserInput"})}),(0,r.jsx)(n.td,{children:"Whether the tool captures input from the user"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"runCmd"})}),(0,r.jsx)(n.td,{children:"Function implementing the tool's functionality"}),(0,r.jsx)(n.td,{children:"See example below"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"example-custom-ui-tool-definition",children:"Example: Custom UI Tool Definition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  name: "change_background_color", // Unique tool name\n  description: "Changes the background color of the page", // Tool description\n  category: "UI", // Main category\n  subcategory: "BG", // Subcategory\n  functionType: "ui", // Function type (always "ui")\n  dangerous: false, // Safe tool indicator\n  associatedCommands: [], // Additional commands (if any)\n  prerequisites: [], // Prerequisites (if any)\n  argumentSchema: { // Arguments required by the tool\n    type: "object",\n    properties: {\n      bgColor: {\n        type: "string", // The background color argument\n        minLength: 1, // Minimum length validation\n        errorMessage: {\n          required: "Background Color is required", // Error message if missing\n        },\n      },\n    },\n    required: ["bgColor"], // Required arguments\n  },\n  rerun: true, // Allows rerunning the tool\n  rerunWithDifferentParameters: true, // Allows rerunning with different inputs\n  capturesUserInput: true, // Captures user input\n  runCmd: ({ functionArgs }, ref) => {\n    const { bgColor } = functionArgs;\n    const messageContainer = ref;\n\n    if (messageContainer) {\n      messageContainer.innerHTML = `Background color changed to ${bgColor}`;\n    }\n\n    document.body.style.backgroundColor = bgColor; // Change background color\n  },\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"runcmd-function-parameters",children:[(0,r.jsx)(n.code,{children:"runCmd"})," Function Parameters"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"runCmd"})," function receives the following parameters:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"functionArgs"})}),(0,r.jsx)(n.td,{children:"Contains the tool's arguments defined in the schema"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"captureResults"})}),(0,r.jsx)(n.td,{children:"Callback function that must be called with input captured from the user"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"previousRunResults"})}),(0,r.jsxs)(n.td,{children:["If the tool was run previously, contains the string ",(0,r.jsx)(n.code,{children:"captureResults"})," was called with"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ref"})}),(0,r.jsx)(n.td,{children:"Reference to the DOM element where you can render UI elements"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["To register custom UI tools, use the ",(0,r.jsx)(n.code,{children:"registerTools"})," command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'window.cmndChat("registerTools", {\n  ui_tools: [\n    {\n      name: "change_background_color",\n      // ... other values\n    },\n    {\n      name: "navigate_to_page",\n      //... other values\n    },\n  ],\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"To extend custom UI tools with built-in tools:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'window.cmndChat("registerTools", {\n  ui_tools: [\n    window.cmndBuiltInTools.capture_signature,\n    window.cmndBuiltInTools.show_form,\n    {\n      name: "change_background_color",\n      // ... other values\n    },\n    {\n      name: "navigate_to_page",\n      //... other values\n    },\n  ],\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"types-of-custom-ui-tools",children:"Types of Custom UI Tools"}),"\n",(0,r.jsx)(n.p,{children:"There are four variations of UI tools you can implement:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Rendering"}),(0,r.jsx)(n.th,{children:"User Input"}),(0,r.jsx)(n.th,{children:"Parameters Used"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type 1"}),(0,r.jsx)(n.td,{children:"Rendered in chat box without capturing input"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ref"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type 2"}),(0,r.jsx)(n.td,{children:"Rendered in chat box with input capture"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"ref"}),", ",(0,r.jsx)(n.code,{children:"captureResults"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type 3"}),(0,r.jsx)(n.td,{children:"Not rendered in chat box without capturing input"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"functionArgs"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Type 4"}),(0,r.jsx)(n.td,{children:"Not rendered in chat box with input capture"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"functionArgs"}),", ",(0,r.jsx)(n.code,{children:"captureResults"})]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"example-type-1---rendered-in-chat-box-without-capturing-input",children:"Example: Type 1 - Rendered in chat box without capturing input"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  name: "plot_graph",\n  description: "Plots a graph on the page using Chart.js",\n  dangerous: false,\n  associatedCommands: [],\n  prerequisites: [],\n  argumentSchema: {\n    type: "object",\n    properties: {\n      type: {\n        type: "string",\n        enum: ["line", "bar", "pie", "doughnut"],\n        errorMessage: {\n          required: "Graph type is required",\n          enum:\n            "Graph type must be one of: line, bar, pie, or doughnut",\n        },\n      },\n      data: {\n        type: "object",\n        properties: {\n          labels: {\n            type: "array",\n            items: { type: "string" },\n            errorMessage: {\n              required: "Labels for the graph are required",\n            },\n          },\n          datasets: {\n            type: "array",\n            items: {\n              type: "object",\n              properties: {\n                label: { type: "string" },\n                data: {\n                  type: "array",\n                  items: { type: "number" },\n                  errorMessage: {\n                    required: "Dataset values are required",\n                  },\n                },\n                backgroundColor: {\n                  type: "array",\n                  items: { type: "string" },\n                },\n                borderColor: {\n                  type: "array",\n                  items: { type: "string" },\n                },\n                borderWidth: { type: "number" },\n              },\n            },\n          },\n        },\n        required: ["labels", "datasets"],\n      },\n    },\n    required: ["type", "data"],\n  },\n  rerun: true,\n  rerunWithDifferentParameters: true,\n  capturesUserInput: true,\n  runCmd: (\n    { functionArgs, previousRunResults, captureResults },\n    ref\n  ) => {\n    const { type, data } = functionArgs;\n\n    // Check if Chart.js is already loaded\n    if (!window.Chart) {\n      console.log("Chart.js not found. Loading dynamically...");\n\n      // Create a script element to load Chart.js\n      const script = document.createElement("script");\n      script.src = "https://cdn.jsdelivr.net/npm/chart.js";\n      script.onload = () => {\n        console.log("Chart.js loaded successfully.");\n        renderChart();\n      };\n      script.onerror = () => {\n        console.error("Failed to load Chart.js.");\n      };\n\n      document.head.appendChild(script);\n    } else {\n      renderChart();\n    }\n\n    function renderChart() {\n      // Ensure the ref element exists\n      if (!ref) {\n        console.error(\n          "No reference element provided for the chart."\n        );\n        return;\n      }\n\n      // Check if the ref element already contains a canvas, if so, reuse it\n      let canvas = ref.querySelector("canvas");\n      if (!canvas) {\n        // Create a new canvas element\n        canvas = document.createElement("canvas");\n        ref.appendChild(canvas);\n      }\n\n      // Destroy any existing chart on the canvas\n      if (ref.chartInstance) {\n        ref.chartInstance.destroy();\n      }\n\n      // Render the chart using Chart.js\n      const ctx = canvas.getContext("2d");\n      ref.chartInstance = new Chart(ctx, {\n        type,\n        data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: "top",\n            },\n          },\n        },\n      });\n\n      if (!previousRunResults) {\n        captureResults(\n          "Graph successfully plotted inside the provided ref."\n        );\n      }\n    }\n  },\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"example-type-2---rendered-in-chat-box-with-input-capture",children:"Example: Type 2 - Rendered in chat box with input capture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  name: "capture_user_name",\n  description: "Renders a text field to capture the user\'s name",\n  dangerous: false,\n  associatedCommands: [],\n  prerequisites: [],\n  argumentSchema: {\n    type: "object",\n    properties: {},\n  },\n  rerun: true,\n  rerunWithDifferentParameters: true,\n  capturesUserInput: true,\n  runCmd: ({ previousRunResults, captureResults }, ref) => {\n    // Ensure the ref element exists\n    if (!ref) {\n      console.error("No reference element provided.");\n      return;\n    }\n\n    // Clear the content of the ref\n    ref.innerHTML = "";\n\n    if (previousRunResults) {\n      // Display the user\'s name if previous results exist\n      const greeting = document.createElement("span");\n      greeting.textContent = `Hello, ${previousRunResults}`;\n      greeting.style.fontSize = "1.2rem";\n      greeting.style.fontWeight = "bold";\n      ref.appendChild(greeting);\n    } else {\n      // Create a container for the input field and button\n      const container = document.createElement("div");\n      container.style.margin = "1rem";\n\n      // Create a label and input field\n      const input = document.createElement("input");\n      input.type = "text";\n      input.placeholder = "Enter your name";\n      input.style.marginRight = "0.5rem";\n\n      // Create a submit button\n      const button = document.createElement("button");\n      button.textContent = "Submit";\n      button.style.padding = "0.5rem 1rem";\n\n      // Append elements to the container\n      container.appendChild(input);\n      container.appendChild(button);\n      ref.appendChild(container);\n\n      // Add event listener for the submit button\n      button.addEventListener("click", () => {\n        const name = input.value.trim();\n        if (name) {\n          captureResults(name);\n\n          // Replace the input and button with the greeting\n          ref.innerHTML = "";\n          const greeting = document.createElement("span");\n          greeting.textContent = `Hello, ${name}`;\n          greeting.style.fontSize = "1.2rem";\n          greeting.style.fontWeight = "bold";\n          ref.appendChild(greeting);\n        } else {\n          alert("Please enter a name.");\n        }\n      });\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"example-type-3---not-rendered-in-chat-box-without-capturing-input",children:"Example: Type 3 - Not rendered in chat box without capturing input"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  name: "change_background_color",\n  description: "Changes the background color of the page",\n  category: "UI",\n  subcategory: "BG",\n  functionType: "ui",\n  dangerous: false,\n  associatedCommands: [],\n  prerequisites: [],\n  argumentSchema: {\n    type: "object",\n    properties: {\n      bgColor: {\n        type: "string",\n        minLength: 1,\n        errorMessage: {\n          required: "Background Color is required",\n        },\n      },\n    },\n    required: ["bgColor"],\n  },\n  rerun: true,\n  rerunWithDifferentParameters: true,\n  capturesUserInput: false,\n  runCmd: (\n    { functionArgs, previousRunResults, captureResults },\n    ref\n  ) => {\n    const { bgColor } = functionArgs;\n    if (!previousRunResults) {\n      captureResults(`Background color changed to ${bgColor}`);\n    }\n    const messageContainer = ref;\n    if (messageContainer) {\n      console.log("we got message container", messageContainer);\n      messageContainer.innerHTML = `Background color changed to ${bgColor}`;\n    }\n    document.body.style.backgroundColor = bgColor;\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"example-type-4---not-rendered-in-chat-box-with-input-capture",children:"Example: Type 4 - Not rendered in chat box with input capture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\n  name: "show_prompt_window",\n  description:\n    "Prompts the user with a message and captures their input",\n  category: "UI",\n  subcategory: "Prompt",\n  functionType: "ui",\n  dangerous: false,\n  associatedCommands: [],\n  prerequisites: [],\n  argumentSchema: {\n    type: "object",\n    properties: {\n      message: {\n        type: "string",\n        minLength: 1,\n        errorMessage: {\n          required: "Prompt message is required",\n        },\n      },\n    },\n    required: ["message"],\n  },\n  rerun: true,\n  rerunWithDifferentParameters: true,\n  capturesUserInput: true,\n  runCmd: (\n    { functionArgs, previousRunResults, captureResults },\n    ref\n  ) => {\n    if (previousRunResults) {\n      return;\n    }\n    const { message } = functionArgs;\n\n    // Prompt the user with the provided message\n    const userInput = prompt(message);\n\n    // If user input is captured, store the result\n    if (userInput !== null) {\n      captureResults(`User entered: ${userInput}`);\n    } else {\n      captureResults("User cancelled the prompt.");\n    }\n\n    // If a reference element is provided, display the user input there\n    const messageContainer = ref;\n    if (messageContainer) {\n      messageContainer.innerHTML =\n        userInput !== null\n          ? `User input: ${userInput}`\n          : "Prompt was cancelled by the user.";\n    }\n\n    // Return the user input for further processing\n    return userInput;\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var r=t(6540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);